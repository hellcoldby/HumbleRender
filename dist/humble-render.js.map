{"version":3,"file":"humble-render.js","sources":["../src/tools/dev_support.js","../src/tools/guid.js","../src/tools/dpr.js","../src/tools/canvas_util.js","../src/view/CanvasLayer.js","../src/tools/anim_util.js","../src/view/CanvasPainter.js","../src/tools/EventEmitter.js","../src/model/Storage.js","../src/control/EventProxy.js","../src/animation/GlobalAnimationMgr.js","../src/entry.js","../src/graphic/shape/Rect/round_rect.js","../src/tools/data_util.js","../src/graphic/transform/Transformable.js","../src/graphic/Animatable/Animatable.js","../src/graphic/Element/Style.js","../src/graphic/Element/Element.js","../src/graphic/Path/PathProxy.js","../src/graphic/Path/Path.js","../src/graphic/shape/Rect/Rect.js"],"sourcesContent":["/*\n *  检测设备支持情况\n */\nlet env = {};\n//tools --- 浏览器环境检测\nfunction detect(ua) {\n    let os = {};\n    let browser = {};\n\n    let firefox = ua.match(/Firefox\\/([\\d.]+)/);\n    let ie = ua.match(/MSIE\\s[\\d.]+/) || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);  // ie7 || ie11\n    let edge = ua.match(/Edge\\/([\\d.]+)/) // ie12 +\n    let weChat = (/micromessenger/i).test(ua);\n\n    if(firefox){\n        browser.firefox = true;\n        browser.version = firefox[1];\n    }\n\n    if(ie){\n        browser.ie = true;\n        browser.version = ie[1];\n    }\n\n    if(edge) {\n        browser.edge = true;\n        browser.version = edge[1];\n    }\n\n    if (weChat) {\n        browser.weChat = true;\n    }\n\n    return {\n        browser : browser,\n        os: os,\n        node: false,\n        canvasSupported: !!document.createElement('canvas').getContext,\n        svgSupported: typeof SVGRect !== 'undefined',\n        touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n        pointerEventsSupported: 'onpointerdown' in window  &&  (browser.edge || (browser.ie && browser.version >= 11)),\n        domSupported: typeof document !== 'undefined'\n    }\n\n}\n\nif (typeof wx === \"object\" && typeof wx.getSystemInfoSync === \"function\") {\n    // 判断微信环境\n    env = {\n        browser: {},\n        os: {},\n        node: false,\n        wxa: true, // Weixin Application\n        canvasSupported: true,\n        svgSupported: false,\n        touchEventsSupported: true,\n        domSupported: false\n    };\n} else if (typeof document === \"undefined\" && typeof self !== \"undefined\") {\n    // web worker 环境\n    env = {\n        browser: {},\n        os: {},\n        node: false,\n        worker: true,\n        canvasSupported: true,\n        domSupported: false\n    };\n} else if(typeof navigator === 'undefined') {\n    // node 环境\n    env = {\n        browser: {},\n        os: {},\n        node: true,\n        worker: false,\n        // Assume canvas is supported\n        canvasSupported: true,\n        svgSupported: true,\n    }\n}else {\n    //浏览器环境检测\n    env = detect(navigator.userAgent); \n}\n\n\nexport default env;","/*\n * 生成唯一 id\n */\n\n let idStart = 0x0907;\n\n export default function() {\n     return idStart ++;\n }","/* \n*  分辨率检测\n*/\nvar dpr = 1;\n\n// If in browser environment\nif (typeof window !== 'undefined') {\n    dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n\n/**\n * Debug log mode:\n * 0: Do nothing, for release.\n * 1: console.error, for debug.\n */\nexport var debugMode = 0;\n// retina 屏幕优化\nexport var devicePixelRatio = dpr;\n","import guid from \"./guid\";\n\n/**\n * 创建 canvas 实例\n * @param {String} id\n * @param {Number} width\n * @param {Number} height\n * @param {Number} dpr\n * @return {Canvas}\n */\nexport function createCanvas(id, width, height, dpr) {\n    let canvas = document.createElement(\"canvas\");\n\n    if (id == null || id == undefined) {\n        id = guid();\n    }\n    canvas.setAttribute(\"data-qr-dom-id\", id);\n\n    if (width == null || width == undefined || height == null || height == undefined) {\n        return canvas;\n    }\n\n    // Canvas instance has no style attribute in nodejs.\n    if (canvas.style) {\n        canvas.style.position = \"absolute\";\n        canvas.style.left = 0;\n        canvas.style.top = 0;\n        canvas.style.width = width + \"px\";\n        canvas.style.height = height + \"px\";\n    }\n\n    if (dpr == null || dpr == undefined) {\n        return canvas;\n    }\n\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    return canvas;\n}\n\nexport function getContext(canvasInstance) {\n    if (!canvasInstance) {\n        canvasInstance = createCanvas();\n    }\n    return canvasInstance.getContext(\"2d\");\n}\n","/*\n * 创建canvas 图层实例\n * 该类被设计用来创建 canvas 层，在 CanvasPainter 类中会引用此类。\n * 在绘图过程中， CanvasPainter 会创建多个 canvas 实例来辅助操作，\n * 某些 canvas 实例是隐藏的，比如用来导出图片的 canvas。\n * 注意：在微信小程序中不能动态创建 canvas 标签，因为微信小程序不允许 DOM 操作。\n */\n\nimport { createCanvas, getContext } from \"../tools/canvas_util\";\nexport default class CanvasLayer {\n    constructor(root, width, height, dpr, id) {\n        Object.assign(this, { root, width, height, dpr, id });\n\n        this.ctx = null;\n\n        let canvasDOM = null;\n        if (root && root.nodeName && root.nodeName.toUpperCase() === \"CANVAS\") {\n            canvasDOM = root;\n        } else if (typeof root === \"string\") {\n            canvasDOM = createCanvas(id, width, height, dpr);\n        } else {\n            this.ctx = root; //root 为上下文环境\n        }\n\n        if (canvasDOM && canvasDOM.style) {\n            canvasDOM.onselectstart = () => {\n                return false;\n            }; // 避免页面选中的尴尬\n            canvasDOM.style[\"-webkit-user-select\"] = \"none\";\n            canvasDOM.style[\"user-select\"] = \"none\";\n            canvasDOM.style[\"-webkit-touch-callout\"] = \"none\";\n            canvasDOM.style[\"-webkit-tap-highlight-color\"] = \"rgba(0,0,0,0)\";\n            canvasDOM.style[\"padding\"] = 0; // eslint-disable-line dot-notation\n            canvasDOM.style[\"margin\"] = 0; // eslint-disable-line dot-notation\n            canvasDOM.style[\"border-width\"] = 0;\n        }\n\n        this.canvasDOM = canvasDOM; //注意：this.canvasDOM 可能为null，因为在微信小程序中，没有办法获取 canvas 实例，只能获取到 Context 对象。\n\n        this.hiddenCanvas = null; // 隐藏画布实例\n        this.hiddenContext = null; // 隐藏画布的上下文\n\n        this.config = null;\n        this.clearColor = 0; //每次清空画布的颜色\n\n        /**\n         * @property {boolean} 是否开启动态模糊\n         */\n        this.motionBlur = false;\n\n        /**\n         * @property {Number} 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        this.lastFrameAlpha = 0.7;\n\n        this.__dirty = true;\n        this.__used = false;\n        this.__drawIndex = 0; //增量绘制的序列\n        this.__startIndex = 0; //最先绘制的元素编号\n        this.__endIndex = 0; //最后绘制的元素编号\n        this.incremental = false; //增量绘制\n    }\n\n    //初始化绘图环境\n    initContext() {\n        if (this.canvasDOM) {\n            this.ctx = getContext(this.canvasDOM);\n        }\n        this.ctx.dpr = this.dpr;\n    }\n\n    //创建隐藏的canvas\n    creatHiddenCanvas() {\n        this.hiddenCanvas = createCanvas(\"back-\" + this.id, this.width, this.height, this.dpr);\n        this.hiddenContext = getContext(this.hiddenCanvas);\n        if (this.dpr !== 1) {\n            this.hiddenContext.scale(this.dpr, this.dpr);\n        }\n    }\n\n    getElementCount() {\n        return this.__endIndex - this.__startIndex;\n    }\n    //改变尺寸\n    resize(width, height) {\n        //Can NOT get canvas instance in Wechat mini-program.\n        if (!this.canvasInstance) {\n            return;\n        }\n        if (this.canvasInstance.style) {\n            this.canvasInstance.style.width = width + \"px\";\n            this.canvasInstance.style.height = height + \"px\";\n        }\n        this.canvasInstance.width = width * this.dpr;\n        this.canvasInstance.height = height * this.dpr;\n\n        if (!this.hiddenCanvas) {\n            return;\n        }\n        this.hiddenCanvas.width = width * this.dpr;\n        this.hiddenCanvas.height = height * this.dpr;\n        if (this.dpr !== 1) {\n            this.hiddenContext.scale(this.dpr, this.dpr);\n        }\n    }\n\n    clear(clearAll, clearColor) {\n        clearColor = clearColor || this.clearColor;\n        let dpr = this.dpr;\n        let width = 0;\n        let height = 0;\n\n        this.ctx.clearRect(0, 0, this.width, this.height);\n    }\n}\n\nlet a = function() {};\n","/*\n * 动画相关的 工具函数集合\n * 1. requestAnimationFrame\n */\n\nexport let RAF = (\n    typeof window !== 'undefined'\n    && ( \n        (window.requestAnimationFrame && window.requestAnimationFrame.bind(window))\n        || (window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window))\n        || window.mozRequestAnimationFrame\n        || window.webkitRequestAnimationFrame\n    )\n) || function(fn) { setTimeout(fn, 16) }\n","import { devicePixelRatio } from \"../tools/dpr\";\nimport CanvasLayer from \"./CanvasLayer\";\nimport { RAF } from \"../tools/anim_util\";\nconst CANVAS_LEVEL_ID = 314159; //图层id;\nconst HOVER_LAYER_LEVEL_ID = 1e5; //事件图层id\nconst ELE_AFTER_INCREMENTAL_INC = 0.01; //图形 增量的初始id\nclass CanvasPainter {\n    constructor(root, storage, opts = {}) {\n        this.opts = Object.assign({}, opts);\n        // console.log(this.opts);\n        this.root = root;\n        this.storage = storage;\n\n        this.type = \"canvas\";\n        this.dpr = this.opts.devicePixelRatio || devicePixelRatio; //分辨率\n\n        let layer_id_list = (this.layer_id_list = []); //图层id序列\n        let layers = (this.layers_map = {}); // 图层对象列表\n        this._layerConfig = {}; //?\n\n        this._needsManuallyCompositing = false; //? 是否需要手动合成\n        this._hoverlayer = null; //?\n\n        this._hoverElements = []; //?\n\n        this._singleCanvas = !this.root.nodeName || this.root.nodeName.toUpperCase() === \"CANVAS\"; //根节点canvas\n\n        if (this._singleCanvas) {\n            // 如果根节点是一个canvas\n            let width = this.root.width;\n            let height = this.root.height;\n\n            if (this.opts.width) {\n                this._width = width = this.opts.width;\n            }\n            if (this.opts.height) {\n                this._height = height = this.opts.height;\n            }\n\n            this.root.width = this.dpr * width; //修正retina 屏幕的分辨率\n            this.root.height = this.dpr * height;\n\n            //为单一画布创建图层\n            let mainLayer = new CanvasLayer(this.root, this._width, this._height, this.dpr, CANVAS_LEVEL_ID);\n            mainLayer.__builtin__ = true; //标记构建完成\n\n            layers[CANVAS_LEVEL_ID] = mainLayer;\n            layer_id_list.push(CANVAS_LEVEL_ID);\n            this._root = root;\n        } else {\n            //根节点不是canvas, 动态创建一个div包裹\n            this._width = getStyle(this.root, \"width\", this.opts);\n            this._height = getStyle(this.root, \"height\", this.opts);\n\n            let canvas_wrap = createDomRoot(this._width, this._height);\n            this._root = canvas_wrap;\n            this.root.appendChild(canvas_wrap);\n        }\n    }\n\n    /**1.1\n     * @method\n     * 刷新\n     * @param {Boolean} [paintAll=false] 是否强制绘制所有displayable 默认false\n     */\n    refresh(paintAll) {\n        //从 storage 中获取 元素列表\n        let list = this.storage.getDisplayList(true);\n        let layer_id_list = this.layer_id_list;\n\n        this._redrawId = Math.random(); // 重绘id\n        this._paintList(list, paintAll, this._redrawId); //1.2 更新图层，动态创建图层， 绘制图层\n\n        for (let i = 0; i < layer_id_list.length; i++) {\n            let id = layer_id_list[i];\n            let layer = this.layers_map[id];\n            if (!layer.__builtin__ && layer.refresh) {\n                let clearColor = i === 0 ? this._backgroundColor : null;\n                layer.refresh(clearColor);\n            }\n        }\n        return this;\n    }\n\n    /**1.2 更新图层，动态创建图层， 绘制图层\n     * @method _paintList\n     * @param {} list --- 要绘制的图形列表\n     * @param {Boolean} [paintAll=false] 是否强制绘制所有displayable\n     * @param {} redrawId --- 随机生成的重绘id\n     */\n    _paintList(list, paintAll, redrawId) {\n        //如果 redrawId 不一致，说明下一个动画帧已经到来，这里就会直接跳过去，相当于跳过了一帧\n        if (this._redrawId !== redrawId) {\n            return;\n        }\n        paintAll = paintAll || false;\n        //1.2_1 更新图层状态， 动态创建图层\n        this._updateLayerStatus(list);\n        //1.2_2开始绘制图形\n        let finished = this._doPaintList(list, paintAll);\n        if (!finished) {\n            let self = this;\n            RAF(function() {\n                self._paintList(list, paintAll, redrawId);\n            });\n        }\n    }\n\n    //1.2_1 更新图层状态 动态创建图层\n    _updateLayerStatus(list) {\n        //1.2_1_2所有图层的更新和使用 标记都设置为false\n        this.eachBuiltinLayer(function(layer, z) {\n            layer.__dirty = layer.__used = false;\n        });\n\n        let prevLayer = null;\n        let idx = 0;\n        for (let i = 0; i < list.length; ) {\n            let ele = list[i];\n            let hLevel = ele.hLevel; //图形对应的图层\n\n            let tmp_id = 0;\n            //1.2_1_1 为每个图形创建图层\n            let layer = this.getLayer(hLevel + tmp_id, this._needsManuallyCompositing);\n\n            if (!layer.__builtin__) {\n                console.log(\"HLevel\" + hLevel + \"has been used by unknow layer\" + layer.id);\n            }\n\n            //为新建立的图层，增加绘制编号\n            if (layer !== prevLayer) {\n                layer.__used = true;\n                if (layer.__startIndex !== i) {\n                    layer.__dirty = true;\n                }\n                layer.__startIndex = i;\n\n                if (!layer.incremental) {\n                    //没有增量图层\n                    layer.__drawIndex = i;\n                } else {\n                    layer.__drawIndex = -1;\n                }\n                updatePrevLayer(i);\n                prevLayer = layer;\n            }\n\n            if (ele.__dirty) {\n                layer.__dirty = true;\n                if (layer.incremental && layer.__drawIndex < 0) {\n                    layer.__drawIndex = i;\n                }\n            }\n\n            i++;\n            idx = i;\n        }\n        updatePrevLayer(idx);\n\n        this.eachBuiltinLayer(function(layer, z) {\n            // Used in last frame but not in this frame. Needs clear\n            if (!layer.__used && layer.getElementCount() > 0) {\n                layer.__dirty = true;\n                layer.__startIndex = layer.__endIndex = layer.__drawIndex = 0;\n            }\n            // For incremental layer. In case start index changed and no elements are dirty.\n            if (layer.__dirty && layer.__drawIndex < 0) {\n                //增量更新的图层\n                layer.__drawIndex = layer.__startIndex;\n            }\n        });\n\n        //tools --- 更新图层序列\n        function updatePrevLayer(idx) {\n            if (prevLayer) {\n                if (prevLayer.__endIndex !== idx) {\n                    prevLayer.__dirty = true;\n                }\n                prevLayer.__endIndex = idx;\n            }\n        }\n\n        // console.log(this.layers_map);\n    }\n\n    //1.2_1_2tools ---遍历图层的id 列表，如果图层构建完成，就执行回调\n    eachBuiltinLayer(cb, context) {\n        let layer_id_list = this.layer_id_list;\n        let layer;\n        for (let i = 0; i < layer_id_list.length; i++) {\n            let id = layer_id_list[i];\n            layer = this.layers_map[id];\n            if (layer.__builtin__) {\n                cb.call(context, layer, id);\n            }\n        }\n    }\n\n    //1.2_1_1  为图形动态创建图层 --参数：（图层id, 是否合并）\n    getLayer(curLevelId, virtual) {\n        if (this._singleCanvas && !this._needsManuallyCompositing) {\n            curLevelId = CANVAS_LEVEL_ID;\n        }\n\n        let layer = this.layers_map[curLevelId]; //根据id获取图层\n        //如果没有初始图层存在就创建一个 canvas 图层\n        if (!layer) {\n            layer = new CanvasLayer(\"hr_\" + curLevelId, this._width, this._height, this.dpr);\n            layer.levelId = curLevelId;\n            layer.__builtin__ = true;\n            if (virtual) {\n                layer.virtual = virtual;\n            }\n            //1.5 图层 插入到页面中\n            this.insertLayer(curLevelId, layer);\n            layer.initContext();\n        }\n        return layer;\n    }\n\n    //1.2_1_1_1 图层 插入到页面中\n    insertLayer(levelId, layer) {\n        let layersMap = this.layers_map;\n        let layer_id_list = this.layer_id_list;\n        let len = layer_id_list.length;\n        let prevLayer = null; //插入图层的上一个图层\n        let index = -1;\n        if (layersMap[levelId]) {\n            // 图层id 已经被占用\n            console.log(\"Zlevel\" + levelId + \"has been used already\");\n            return;\n        }\n\n        if (len > 0 && levelId > layer_id_list[0]) {\n            //多个图层\n            for (let i = 0; i < len - 1; i++) {\n                if (layer_id_list[i] < levelId && layer_id_list[i + 1] > levelId) {\n                    index = i; //找到 图层插入的前一个位置\n                    break;\n                }\n            }\n            prevLayer = layersMap[layer_id_list[index]]; //前一个图层\n        }\n\n        layer_id_list.splice(index + 1, 0, levelId); //插入 新图层id\n        layersMap[levelId] = layer; // 新图层id 对应图层map\n\n        //没有虚拟图层\n        if (!layer.virtual) {\n            if (prevLayer) {\n                let prevDom = prevLayer.canvasDOM;\n                if (prevDom.nextSibling) {\n                    this._root.insertBefore(layer.canvasDOM, prevDom.nextSibling);\n                } else {\n                    this._root.appendChild(layer.canvasDOM);\n                }\n            } else {\n                if (this._root.firstChild) {\n                    this._root.insertBefore(layer.canvasDOM, this.root.firstChild);\n                } else {\n                    this._root.appendChild(layer.canvasDOM);\n                }\n            }\n        }\n    }\n\n    //1.2_2绘制图形\n    _doPaintList(list, paintAll) {\n        let layerList = [];\n        for (let i = 0; i < this.layer_id_list.length; i++) {\n            let id = this.layer_id_list[i];\n            let cur_layer = this.layers_map[id];\n            //如果图层构建完成 并且 当前图层和事件图层不一致  并且 图层需要更新 ， 那么就放入到 layerList 图层队列中\n            if (cur_layer.__builtin__ && cur_layer !== this.__hoverlayer && (cur_layer.__dirty || paintAll)) {\n                layerList.push(cur_layer);\n            }\n        }\n        // console.log(layerList);\n\n        let finished = true;\n        for (let j = 0; j < layerList.length; j++) {\n            let cur_layer = layerList[j];\n            let ctx = cur_layer.ctx;\n            let scope = {};\n            ctx.save();\n\n            let start = paintAll ? cur_layer.__startIndex : cur_layer.__drawIndex; //paintAll 为true ,重绘所有图形\n\n            let userTimer = !paintAll && cur_layer.incremental && Date.now; //不重新绘制 记录当前时间\n            let startTimer = userTimer && Date.now();\n\n            let clearColor = cur_layer.hLevel === this.layer_id_list[0] ? this._backgroundColor : null;\n\n            //如果全部重绘，清空图层颜色\n            if (cur_layer.__startIndex === cur_layer.__endIndex) {\n                cur_layer.clear(false, clearColor);\n            } else if (start === cur_layer.__startIndex) {\n                let firstEl = list[start];\n                if (!firstEl.incremental || paintAll) {\n                    cur_layer.clear(false, clearColor);\n                }\n            }\n\n            if (start === -1) {\n                console.log(\"for some unknow reason.  drawIndex is -1\");\n                start = cur_layer.__startIndex;\n            }\n\n            //遍历所有的图层,开始绘制元素\n            let i = start;\n            // console.log(cur_layer);\n            for (; i < cur_layer.__endIndex; i++) {\n                let ele = list[i];\n                //1.2_2_1绘制图形\n                this._doPaintEl(ele, cur_layer, paintAll, scope);\n                //绘制完成标记为不更新\n                ele.__dirty = ele.__dirtyText = false;\n\n                //如果 不是全部重绘\n                if (userTimer) {\n                    let dTime = Date.now() - startTimer;\n                    //这里的时间非常重要， 如果15ms 内没有完成所有绘制， 则跳出， 等待下一帧继续绘制\n                    //但是 15ms 的时间是有限的， 如果元素的数量非常巨大， 例如有1000万个， 还是会卡顿。\n                    if (dTime > 15) {\n                        break;\n                    }\n                }\n            }\n\n            cur_layer.__drawIndex = i;\n\n            if (cur_layer.__drawIndex < cur_layer.__endIndex) {\n                finished = false;\n            }\n\n            if (scope.prevElClipPaths) {\n                ctx.restore();\n            }\n\n            ctx.restore();\n\n            return finished;\n        }\n    }\n    //1.2_2_1 开始绘制图层里的 元素\n    _doPaintEl(ele, cur_layer, paintAll, scope) {\n        let ctx = cur_layer.ctx;\n        let m = ele.transform;\n        if (\n            (cur_layer.__dirty || paintAll) &&\n            !ele.invisible &&\n            ele.style.opacity !== 0 &&\n            !(m && !m[0] && !m[3])\n            // && !(ele.culling && this.isDisplayableCulled())\n        ) {\n            ele.beforeBrush && ele.beforeBrush(ctx);\n            ele.brush(ctx, scope.prevEl || null);\n            scope.prevEl = ele;\n            ele.afterBrush && ele.afterBrush(ctx);\n        }\n    }\n\n    refreshHover() {\n        let hoverElements = this._hoverElements;\n        let len = hoverElements.length;\n\n        if (!len) return;\n\n        let hoverLayer = this._hoverlayer;\n        if (!hoverLayer) {\n            hoverLayer = this._hoverlayer = this.getLayer(HOVER_LAYER_LEVEL_ID); //获取图层\n        }\n        // hoverLayer.ctx.save();\n\n        // hoverLayer.ctx.restore();\n    }\n}\n\nexport default CanvasPainter;\n\n//tools--动态创建 根节点\nfunction createDomRoot(width, height) {\n    let oDiv = document.createElement(\"div\");\n    oDiv.style.cssText = [`position: relative`, `width: ${width}px`, `height: ${height}px`, `padding: 0`, `margin: 0`, `border-width: 0`, `background: none`].join(\";\") + \";\";\n    return oDiv;\n}\n\n//tools--获取真实样式\nfunction getStyle(obj, attr, opts) {\n    if (opts && attr in opts) {\n        return parseFloat(opts[attr]);\n    } else {\n        let res = obj.currentStyle ? obj.currentStyle[attr] : getComputedStyle(obj, false)[attr];\n        return parseInt(res, 10);\n    }\n}\n","/*\n *\n * event_simulation(事件模拟) 为不支持事件的类提供事件支持\n * 订阅发布模式\n */\n\n/**\n * @method constructor Eventful\n * @param {Object} [eventProcessor] The object eventProcessor is the scope when\n *        `eventProcessor.xxx` called. 事件处理者，也就是当前事件处理函数执行时的作用域。\n * @param {Function} [eventProcessor.normalizeQuery]\n *        param: {String|Object} Raw query.\n *        return: {String|Object} Normalized query.\n * @param {Function} [eventProcessor.filter] Event will be dispatched only\n *        if it returns `true`.\n *        param: {String} eventType\n *        param: {String|Object} query\n *        return: {Boolean}\n * @param {Function} [eventProcessor.afterTrigger] Called after all handlers called.\n *        param: {String} eventType\n * @param {Function} [eventProcessor.afterListenerChanged] Called when any listener added or removed.\n *        param: {String} eventType\n */\nclass Eventful {\n    constructor(eventProcessor) {\n        this._handle_map = {}; //订阅的事件列表\n        this._eventProcessor = eventProcessor;\n    }\n\n    /**\n     * 订阅事件\n     *\n     * @param {String} event 事件名称\n     * @param {String | Object} query 事件过滤器条件\n     * @param {Function} handler 事件控制器\n     * @param {Object} context\n     */\n    on(event, query, fn, context) {\n        return on(this, event, query, fn, context, false);\n    }\n\n    once(event, query, fn, context) {\n        return on(this, event, query, fn, context, true);\n    }\n\n    /**\n     * @method\n     * 触发事件（发布）\n     *\n     * @param {String} event --- 事件的名称\n     */\n    trigger(event) {\n        let _map = this._handle_map[event];\n        // console.log(_map[0].fn);\n        let _ev_pro = this._eventProcessor;\n        if (_map) {\n            let args = arguments;\n            // console.log(args);\n            let args_len = args.length;\n\n            if (args_len > 3) {\n                //如果参数长度超过3个，截取第一个后边的 所有参数\n                args = Array.prototype.slice.call(args, 1);\n            }\n\n            let _map_len = _map.length;\n            for (let i = 0; i < _map_len; ) {\n                //遍历事件列表\n                let item = _map[i];\n                if (_ev_pro && _ev_pro.filter && item.query !== null && !_ev_pro.filter(event, item.query)) {\n                    i++;\n                    continue;\n                }\n\n                switch (args_len) {\n                    case 1:\n                        item.fn.call(item.ctx);\n                        break;\n                    case 2:\n                        item.fn.call(item.ctx, args[1]);\n                        break;\n                    case 3:\n                        item.fn.call(item.ctx, args[2]);\n                        break;\n                    default:\n                        item.fn.apply(item.ctx, args);\n                        break;\n                }\n\n                if (item.one) {\n                    //如果只运行一次， 就从订阅列表中移除 当前事件\n                    _map.splice(i, 1);\n                    _map.length--;\n                } else {\n                    i++;\n                }\n            }\n        }\n\n        _ev_pro && _ev_pro.afterTigger && _ev_pro.afterTigger(event);\n        return this;\n    }\n}\n\n//tools -- 订阅事件\nfunction on(_this, event, query, fn, context, isOnce) {\n    let _map = _this._handle_map;\n\n    if (typeof query === \"function\") {\n        //参数自适应\n        context = fn;\n        fn = query;\n        query = null;\n    }\n\n    if (!fn || !event) {\n        return _this;\n    }\n\n    // console.log(fn);\n\n    query = normalizeQuery(_this, query);\n\n    if (!_map[event]) {\n        //没有相关的订阅事件就 创建订阅列表\n        _map[event] = [];\n    }\n\n    for (let i = 0; i < _map[event].length; i++) {\n        //已经订阅过的事件 不再订阅\n        if (_map[event][i].h === fn) {\n            return _this;\n        }\n    }\n\n    let wrap = {\n        fn,\n        one: isOnce,\n        query,\n        ctx: context || _this,\n        // FIXME\n        // Do not publish this feature util it is proved that it makes sense.  我不知道callAtLast 是干嘛的\n        callAtLast: fn.qrEventfulCallAtLast\n    };\n\n    let lastIndex = _map[event].length - 1;\n    let lastWrap = _map[event][lastIndex];\n\n    if (lastWrap && lastWrap.callAtLast) {\n        // callAtLast 存在，订阅事件就替换它\n        _map[event].splice(lastIndex, 0, wrap);\n    } else {\n        _map[event].push(wrap); // 订阅事件放入对应的列表\n    }\n\n    callListenerChanged(_this, event); // 不知道这是干嘛用的\n    return _this;\n}\n\n//tools -- 解析参数\nfunction normalizeQuery(host, query) {\n    let eventProcessor = host._$eventProcessor;\n    if (query != null && eventProcessor && eventProcessor.normalizeQuery) {\n        query = eventProcessor.normalizeQuery(query);\n    }\n    return query;\n}\n\n//tools --\nfunction callListenerChanged(eventful, eventType) {\n    let eventProcessor = eventful._$eventProcessor;\n    if (eventProcessor && eventProcessor.afterListenerChanged) {\n        eventProcessor.afterListenerChanged(eventType);\n    }\n}\n\nexport default Eventful;\n","/**\n *\n * 内容仓库 (M)，用来存储和管理画布上的所有对象，同时提供绘制和更新队列的功能。\n * 需要绘制的对象首先存储在 Storage 中，然后 Painter 类会从 Storage 中依次取出进行绘图。\n * 利用 Storage 作为内存中转站，对于不需要刷新的对象可以不进行绘制，从而可以提升整体性能。\n *\n */\n\nimport env from \"../tools/dev_support\";\nimport Eventful from \"../tools/EventEmitter\";\nclass Storage extends Eventful {\n    constructor() {\n        super();\n        this._roots = new Map(); //元素id 列表\n        this._displayList = []; //所有图形的绘制队列\n        this._displayList_len = 0; // 图形编号\n    }\n\n    //1.1增加 图像 到元素的id列表\n    addToRoot(ele) {\n        if (ele._storage === this) {\n            return;\n        }\n        // this.trigger(\"beforeAddToRoot\");\n        // ele.trigger(\"beforeAddToRoot\");\n        this.addToStorage(ele);\n    }\n\n    /**\n     * 1.2增加 图像 到元素的id列表\n     * 创建基础图形的时候，基础图形订阅了\"addToStorage\"\n     * @param {*} ele\n     */\n    addToStorage(ele) {\n        this._roots.set(ele.id, ele);\n        // this.trigger(\"addToStorage\");\n        // ele.trigger(\"addToStorage\");\n        return this;\n    }\n\n    /**2.1 返回所有图形的绘制队列\n     * @method getDisplayList\n     * @param {boolean} [needUpdate=false] 是否在返回前更新该数组\n     * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 needUpdate 为 true 的时候有效\n     *\n     * 详见{@link Displayable.prototype.updateDisplayList}\n     * @return {Array<Displayable>}\n     */\n    getDisplayList(needUpdate, includeIgnore = false) {\n        if (needUpdate) {\n            this.updateDisplayList(includeIgnore); //更新图形队列,并按照优先级排序， 更新完成后返回最新排序的 图形队列\n        }\n        return this._displayList;\n    }\n\n    /**\n     * @method updateDisplayList\n     * 2.2 更新图形的绘制队列。\n     * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n     * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n     * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n     */\n    updateDisplayList(includeIgnore) {\n        this._displayList_len = 0;\n        let displayList = this._displayList;\n        //遍历元素的id 列表\n        this._roots.forEach((ele, id, map) => {\n            this._updateAndAddDisplayable(ele, null, includeIgnore);\n        });\n\n        displayList.length = this._displayList_len;\n        //队列排序\n        // env.canvasSupported && (displayList, this._displayList_sort);\n    }\n\n    _updateAndAddDisplayable(ele, clipPaths, includeIgnore) {\n        if (ele.ignore && !includeIgnore) {\n            return;\n        }\n\n        if (ele.__dirty) {\n            // ele.composeLocalTransform();\n        }\n\n        ele.clipPaths = clipPaths;\n        this._displayList[this._displayList_len++] = ele;\n    }\n\n    //tools -- 对图形队列排序\n    _displayList_sort(a, b) {\n        if (a.qlevel === b.qlevel) {\n            if (a.z === b.z) {\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.qlevel - b.qlevel;\n    }\n}\n\nexport default Storage;\n","/*\n * 拦截浏览器默认事件，用自定义事件来代替\n */\nexport default class EventProxy {\n    constructor(root) {}\n\n    trigger(){\n        \n    }\n}\n","/*\n *  用来记录 动画开关， 时间戳， 添加动画序列\n */\n\nimport { RAF } from \"../tools/anim_util\";\nimport Eventful from \"../tools/EventEmitter\";\n\nclass GlobalAnimationMgr extends Eventful {\n    constructor(opts) {\n        super(); //调用父类的\n        opts = opts || {};\n        this._running = false; //动画启动开关\n        this._timestamp; //时间戳(记录动画启动时间)\n        this._pause = {\n            duration: 0, //暂停持续时间\n            start: 0, //暂停时间戳\n            flag: false //暂停开关标记\n        };\n        this._animatableMap = new Map(); //动画对象列表\n    }\n\n    //启动动画\n    start() {\n        this._pause.duration = 0;\n        this._timestamp = new Date().getTime();\n        this._startLoop();\n    }\n\n    //暂停动画\n    pause() {\n        if (!this._pause.flag) {\n            this._pause.start = new Date().getTime();\n            this._pause.flag = true; //暂停\n        }\n    }\n\n    // RAF (requestAnimationFrame) 递归执行动画\n    _startLoop() {\n        let self = this;\n        this._running = true;\n        function nextFrame() {\n            if (self._running) {\n                RAF(nextFrame);\n                !self._pause.flag && self._update();\n            }\n        }\n        RAF(nextFrame);\n    }\n\n    //\n    _update() {\n        let time = new Date().getTime() - this._pause.duration;\n        let delta = time - this._timestamp;\n        this._timestamp = time;\n        this.trigger(\"frame\", delta);\n    }\n\n    //向动画列表中增加 动画方案（特征）\n    addAnimatable(animatable) {\n        this._animatableMap.set(animatable.id, animatable);\n    }\n\n    //从动画列表中移除 动画方案（特征）\n    removeAnimatable(animatable) {\n        this._animatableMap.delete(animatable.id);\n    }\n}\n\nexport default GlobalAnimationMgr;\n","/*\n *  注释:tools --- 表示是被其他函数引用 的工具函数\n *  引入 Storage.js 保存 绘制对象 的列表 （Model)\n *  引入 CanvasPainter.js 来生成绘图环境 创建图层 等 (view)\n *  引入 EvetProxy.js 转发DOM 事件，一部分到 容器div上，一部分到document， 或到绘制元素\n *  引入 GlobalAnimationMgr.js  无限循环监控 视图变化\n */\n\nimport env from \"./tools/dev_support\";\nimport guid from \"./tools/guid\";\nimport CanvasPainter from \"./view/CanvasPainter\"; //视图 view\nimport Storage from \"./model/Storage\"; // 数据模型  model\nimport EventProxy from \"./control/EventProxy\";\nimport GlobalAnimationMgr from \"./animation/GlobalAnimationMgr\"; //动画\n\n//检测浏览器的支持情况\nif (!env.canvasSupported) {\n    throw new Error(\"Need Canvas Environment\");\n}\n\n//tools -- 初始保存实例 map\nlet instances = {};\n\n//tools -- 图形环境 map\nlet painterMap = {\n    canvas: CanvasPainter\n};\n\nexport let version = \"1.0.0\";\n\n/**\n *  main 初始化生成 绘图环境的实例\n *\n * @export\n * @param {DOM | Canvas | Context} root\n * @param {Object} opts\n */\nexport function init(root, opts) {\n    let hr = new HumbleRender(root, opts);\n    instances[hr.id] = hr;\n    return hr;\n}\n\n//tools --- 初始化图形环境\nclass HumbleRender {\n    constructor(root, opts = {}) {\n        this.id = guid();\n        this.root = root;\n        let self = this;\n\n        let renderType = opts.render;\n        if (!renderType || !painterMap[renderType]) {\n            renderType = \"canvas\";\n        }\n        //创建数据仓库\n        this.storage = new Storage();\n        //生成视图实例\n        this.painter = new painterMap[renderType](this.root, this.storage, opts, this.id);\n\n        //对浏览器默认事件拦截， 做二次处理\n        let handerProxy = null;\n        if (typeof this.root.moveTo !== \"function\") {\n            if (!env.node && !env.worker && !env.wxa) {\n                handerProxy = new EventProxy(this.painter.root);\n            }\n        }\n\n        //生成事件实例\n        // this.eventHandler = new HRenderEventHandler(this.storage, this.painter, handerProxy);\n\n        //生成动画实例\n        this.globalAnimationMgr = new GlobalAnimationMgr();\n        this.globalAnimationMgr.on(\"frame\", function() {\n            self.flush();\n        });\n        this.globalAnimationMgr.start();\n        this._needRefresh = false;\n    }\n\n    //获取图形实例唯一id\n    getId() {\n        return this.id;\n    }\n\n    //向数据仓库storage中添加元素，并开启刷新\n    add(ele) {\n        this.storage.addToRoot(ele);\n        this.refresh();\n    }\n\n    //移除元素\n    remove(ele) {\n        // this.storage.delFromRoot(ele);\n        this.refresh();\n    }\n\n    //开启刷新\n    refresh() {\n        this._needRefresh = true;\n    }\n\n    //监控 this._needRefresh 的开关\n    flush() {\n        // console.log('123');\n        //全部重绘\n        if (this._needRefresh) {\n            this.refreshImmediately();\n        }\n        //重绘特定元素\n        if (this._needRefreshHover) {\n            this.refreshHoverImmediaterly();\n        }\n    }\n\n    //立即重绘\n    refreshImmediately() {\n        console.log(\"立即更新\");\n        this._needRefresh = this._needRefreshHover = false;\n        this.painter.refresh();\n        this._needRefresh = this._needRefreshHover = false;\n    }\n\n    //立即重绘特定元素\n    refreshHoverImmediaterly() {\n        this._needRefreshHover = false;\n        this.painter.refreshHover && this.painter.refreshHover();\n    }\n}\n","\nexport default function round_rect(ctx, shape) {\n    let x = shape.x;\n    let y = shape.y;\n    let width = shape.width;\n    let height = shape.height;\n    let r = shape.r;\n    let r1, r2, r3, r4;\n\n    if(width < 0){\n        x = x + width; \n        width = - width;\n    }\n\n    if(height < 0) {\n        y = y + height;\n        height = - height;\n    }\n\n    if(typeof r === 'number') {\n        r1 = r2 = r3 = r4 = r;\n    }else if(r instanceof Array) {\n        switch (r.length) {\n            case 1:\n                r1 = r2 = r3 = r4 = r[0];\n                break;\n            case 2:\n                r1 = r3 = r[0];\n                r2 = r4 = r[2]; \n                break;\n            case 3:\n                r1 = r[0];\n                r2 = r4 = r[1];\n                r3 = r[2];\n                break;\n            default:\n                r1 = r[0];\n                r2 = r[1];\n                r3 = r[2];\n                r4 = r[4];\n                break;\n        }\n   \n    }else{\n        r1 = r2 = r3 = r4 = 0;\n    }\n\n    let total;\n    if(r1 + r2 > width) {\n        total = r1 + r2;\n        r1 *= width / total;\n        r2 *= width / total;\n    }\n\n    if (r3 + r4 > width) {\n        total = r3 + r4;\n        r3 *= width / total;\n        r4 *= width / total;\n    }\n    if (r2 + r3 > height) {\n        total = r2 + r3;\n        r2 *= height / total;\n        r3 *= height / total;\n    }\n    if (r1 + r4 > height) {\n        total = r1 + r4;\n        r1 *= height / total;\n        r4 *= height / total;\n    }\n\n    ctx.moveTo(x + r1, y);\n    ctx.lineTo(x + width - r2, y);\n    r2 !== 0 && ctx.arc(x + width - r2, y + r2, r2, -Math.PI /2, 0);\n    ctx.lineTo(x + width, y + height - r3);\n    r3 !== 0 && ctx.arc(x + width - r3, y + height - r3, r3, 0, Math.PI / 2);\n    ctx.lineTo(x + r4, y + height);\n    r4 !== 0 && ctx.arc(x + r4, y + height - r4, r4, Math.PI / 2, Math.PI);\n    ctx.lineTo(x, y + r1);\n    r1 !== 0 && ctx.arc(x + r1, y + r1, r1, Math.PI, Math.PI * 1.5);\n\n\n}","/*\n * data_util 数据 相关的 工具集合\n *\n * 判断对象类型\n */\n\n//1. 判断对象类型\nexport function isObject(val) {\n    let res = typeof val;\n    return res === \"function\" || (!!val && res === \"object\");\n}\n\n//2. 判断数据类型\nexport function judgeType(val) {\n    return Object.prototype.toString.call(val);\n}\n\n//3. 深拷贝\nexport function deepClone(source) {\n    if (!source || typeof source !== \"object\") return source;\n\n    let res = source;\n    if (judgeType(source) === \"[object Array]\") {\n        res = [];\n        for (let i = 0; i < source.length; i++) {\n            res[i] = deepClone(source[i]);\n        }\n    }\n    if (judgeType(source) === \"[object Object\") {\n        res = {};\n        for (let key in source) {\n            res[key] = deepClone(source[key]);\n        }\n    }\n\n    return res;\n}\n\nexport function merge(target, source, overwrite) {\n    if (!isObject(target) || !isObject(source)) {\n        //如果 overwirte 为true, source 覆盖 target\n        if (overwrite) {\n            return deepClone(source);\n        } else {\n            return target;\n        }\n    }\n\n    for (let key in source) {\n        let source_prop = source[key];\n        let target_prop = target[key];\n        if (judgeType(source_prop) === \"[object Object]\" && judgeType(target_prop) === \"[object Object]\") {\n            // 如果需要递归覆盖，就递归调用merge\n            merge(target_prop, source_prop, overwrite);\n        } else if (overwrite || !(key in target)) {\n            // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n            // NOTE，在 target[key] 不存在的时候也是直接覆盖\n            target[key] = deepClone(source[key], true);\n        }\n    }\n\n    return target;\n}\n\n//4. 从父类继承 并覆盖taget内置的属性\nexport function inheritProperties(target, source, opts) {\n    let src = new source(opts);\n    for (let name in src) {\n        if (target.hasOwnProperty(name)) {\n            target[name] = src[name];\n        }\n    }\n}\n\n//5. 从目标对象上拷贝属性\nexport function copyOwnProperties(target, source, excludes = []) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            if (excludes && excludes.length) {\n                if (excludes.indexOf(key) !== -1) {\n                    continue;\n                }\n            }\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\n\n//6. 继承多个实例的（非继承）属性 参数（targe, obj1, obj2, ..., overWrite)\nexport function mixin() {\n    let lastArgs = arguments[arguments.length - 1];\n    let overwrite = false;\n    if (typeof lastArgs === \"boolean\") {\n        overwrite = lastArgs;\n    }\n    let target = arguments[0];\n    let i = 1;\n    let tmp = null;\n    let tmp_keys = [];\n    for (i; i < arguments.length; i++) {\n        tmp = arguments[i];\n        // console.log(tmp);\n\n        tmp_keys = Object.getOwnPropertyNames(tmp);\n        if (tmp_keys.length) {\n            tmp_keys.forEach(function(prop, index) {\n                if (tmp.hasOwnProperty(prop) && (overwrite ? tmp[prop] != null : target[prop] == null)) {\n                    target[prop] = tmp[prop];\n                }\n            });\n        }\n    }\n    return target;\n}\n","export default class Transformable {\n    constructor() {}\n}\n","export default class Animatable {\n    constructor() {}\n}\n","let STYLE_COMMON_PROPS = [\n    [\"shadowBlur\", 0],\n    [\"shadowOffsetX\", 0],\n    [\"shadowOffsetY\", 0],\n    [\"shadowColor\", \"#000\"],\n    [\"lineCap\", \"butt\"],\n    [\"lineJoin\", \"miter\"],\n    [\"miterLimit\", 10]\n];\n\n/**\n * @method Style\n * @param {} opts --- 用户自定义的样式\n */\nexport default function Style(opts) {\n    extendStyle(this, opts, false);\n}\n\nStyle.prototype = {\n    constructor: Style,\n    fill: \"#000\",\n    stroke: null,\n    opacity: 1,\n    fillOpacity: null,\n    strokeOPacity: null,\n\n    strokeNoScale: false,\n\n    lineDash: null,\n    lineDashOffset: 0,\n\n    shadowblur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n\n    lineWidth: 1,\n    text: null,\n\n    font: null,\n    textFont: null,\n    fontStyle: null,\n    fontWeight: null,\n    fontFamily: null,\n    textTag: null,\n    textFill: \"#000\",\n    textWidth: null,\n    textHeight: null,\n    textStrokeWidth: 0,\n    textLineHeight: null,\n\n    textPosition: \"inside\",\n    textRect: null,\n    textOffset: null,\n\n    textAlign: null,\n    textVerticalAlign: null,\n    textDistance: 5,\n\n    textShadowColor: \"transparent\",\n    textShadowBlur: 0,\n    textShadowOffsetX: 0,\n    textShadowOffsetY: 0,\n\n    textBoxShadowColor: \"transparent\",\n    textBoxShadowBlur: 0,\n    textBoxShadowOffsetX: 0,\n    textBoxShadowOffsetY: 0,\n\n    transformText: 0,\n    textRotation: 0,\n    textOrigin: null,\n\n    textBorderColor: null,\n    textBackgroundColor: null,\n    textBorderWidth: 0,\n    textBorderRadius: 0,\n    textPadding: null,\n\n    rich: null,\n    truncate: null,\n    blend: null,\n\n    bind: function(ctx, ele, prevEl) {\n        // console.log(this);\n        let prevStyle = prevEl && prevEl.style;\n\n        //如果没有上一个样式，就代表绘制第一个元素\n\n        if (!prevEl) {\n            ctx.fillStyle = this.fill;\n            ctx.strokeStyle = this.stroke;\n            ctx.globalAlpha = this.opacity == null ? 1 : this.opacity;\n\n            ctx.globalCompositeOperation = this.blend || \"source-over\";\n        }\n\n        // if(this.hasStroke()) {\n        //     let lineWidth = this.lineWidth;\n        //     ctx.lineWidth = lineWidth / (this.strokeNoScale && ele && ele.getLineScale)?\n        // }\n    },\n\n    hasFill: function() {\n        let fill = this.fill;\n        return fill != null && fill !== \"none\";\n    },\n\n    hasStroke: function() {\n        let stroke = this.stroke;\n        return stroke != null && stroke !== \"none\" && this.lineWidth > 0;\n    },\n\n    getBoundingRect: function() {},\n\n    set: function() {},\n\n    clone: function() {}\n};\n\nlet styleProto = Style.prototype;\nfor (let i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n    let prop = STYLE_COMMON_PROPS[i];\n    if (!prop[0] in styleProto) {\n        styleProto[prop[0]] = prop[1];\n    }\n}\n\n/**\n * tools -- 复制属性\n * @param source --- 传递来的属性\n * @param overwrite --- 是否覆盖   true -- 全部覆盖   false --- 仅复制target没有的属性\n */\nconst extendStyle = function(target, source, overwrite) {\n    if (!source) return;\n    if (overwrite) {\n        //全覆盖\n        target = Object.assign(target, source);\n    } else {\n        for (let prop in source) {\n            //仅复制target已经有的属性\n            if (!target.hasOwnProperty(prop) && source[prop]) {\n                target[prop] = source[prop];\n            }\n        }\n    }\n    return target;\n};\n","/*\n * HRenderer 中所有图形对象都是 Element 的子类。这是一个抽象类，请不要直接创建这个类的实例。\n * 引入 transformable 为 Element 类提供变换功能，例如：平移、缩放、扭曲、旋转、翻转、形状、样式。\n * 引入 Animatable 为Element 为元素提供动画功能。\n * 引入 EventFul 为 Element 提供订阅发布功能。\n *\n * 注意： Element 同时继承多个类，并且只继承用户传递来的属性\n */\nimport Eventful from \"../../tools/EventEmitter\";\nimport Transformable from \"../transform/Transformable\";\nimport Animatable from \"../Animatable/Animatable\";\nimport guid from \"../../tools/guid\";\nimport { inheritProperties, mixin } from \"../../tools/data_util\";\nimport Style from \"./Style\";\n\nclass Element {\n    constructor(opts = {}) {\n        this.opts = opts;\n        this.id = \"el-\" + guid();\n        this.type = \"element\";\n        this.name = \"\";\n        this.parent = null;\n\n        this.ignore = false; // 为true时，忽略图形绘制和事件触发\n        this.clipPath = null; //用于裁剪的路径，所有 Group 内的路径在绘制时都会被这个路径裁剪，该路径会继承被裁减对象的变换。\n\n        this.calculateTextPosition = null; //文本位置的字符串，计算实际位置\n\n        this.invisible = false; //是否隐藏对象，默认false--不隐藏。（绘制）\n        this.z = 0;\n\n        this.hLevel = 0; //确定可显示对象可以在画布的哪一层绘制\n\n        this.draggalbe = false; //是否开启拖拽\n        this.dragging = false; //是否在拖拽中\n\n        this.slient = false; //是否响应鼠标事件\n\n        this.cursor = \"pointer\";\n        this.rectHover = false; // 如果悬停区域是边界举行\n\n        this.progressive = false; // 逐渐渲染数据\n\n        this.incremental = false; // 渐增渲染\n        this.globalScaleRatio = 1; //全局缩放\n\n        this.animationProcessList = []; //元素上所有的动画处理列表\n\n        this._hr = null; //元素被添加到 HumbleRender 实例后，自动赋值\n\n        this._dirty = true; //下一帧渲染的元素，标记为 dirty（true)\n\n        this._rect = null;\n\n        this.__clipPaths = null; //因为仅使用null来检查clipPaths是否已更改很容易\n\n        this.style = new Style(this.opts.style, this);\n\n        this.shape = {}; // shape 形状 宽高 坐标等信息\n\n        //拷贝自定义属性到 this.shape 默认属性中\n        let defaultShape = this.opts.shape;\n        if (defaultShape) {\n            for (let name in defaultShape) {\n                if (!this.shape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n                    this.shape[name] = defaultShape[name];\n                }\n            }\n        }\n\n        inheritProperties(this, Transformable, this.opts);\n        inheritProperties(this, Eventful, this.opts);\n        inheritProperties(this, Animatable, this.opts);\n        // copyOwnProperties(this, this.opts, [\"style\", \"shape\"]);\n\n        // console.log(this);\n        // this.on(\"addToStorage\", this.addToStorageHandler);\n        // this.on(\"delFromStorage\", this.delFromStorageHandler);\n    }\n\n    beforeBrush(ctx) {}\n\n    afterBrush(ctx) {}\n\n    brush() {}\n}\n\nmixin(Element.prototype, Animatable.prototype, Transformable.prototype, Eventful.prototype);\n// console.log(Element.prototype);\n\nexport default Element;\n","var CMD = {\n    M: 1,\n    L: 2,\n    C: 3,\n    Q: 4,\n    A: 5,\n    Z: 6,\n    R: 7\n};\nexport default class pathProxy {\n    constructor(notSaveData) {\n        this._saveData = !(notSaveData || false);\n\n        if (this._saveData) {\n            this.data = [];\n        }\n\n        this.ctx = null;\n    }\n\n    getContext() {\n        return this._ctx;\n    }\n\n    beginPath(ctx) {\n        this._ctx = ctx;\n        ctx && ctx.beginPath();\n        ctx && (this.dpr = ctx.dpr);\n\n        //Reset\n        if (this._saveData) {\n            this._len = 0;\n        }\n\n        if (this._lineDash) {\n            this._lineDash = null;\n            this._dashOffset = 0;\n        }\n        return this;\n    }\n\n    moveTo(x, y) {\n        this.addData(CMD, x, y);\n        this._ctx && this._ctx.moveTo(x, y);\n    }\n\n    fill(ctx) {\n        ctx && ctx.fill();\n        this.toStatic();\n    }\n\n    closePath() {\n        this.addData(CMD.Z);\n\n        var ctx = this._ctx;\n        var x0 = this._x0;\n        var y0 = this._y0;\n        if (ctx) {\n            // this._needsDash() && this._dashedLineTo(x0, y0);\n            ctx.closePath();\n        }\n\n        this._xi = x0;\n        this._yi = y0;\n        return this;\n    }\n\n    toStatic() {\n        let data = this.data;\n        if (data instanceof Array) {\n            data.length = this._len;\n            if (hasTypeArray) {\n                this.data = new Float32Array(data);\n            }\n        }\n    }\n\n    addData(cmd) {\n        if (!this._saveData) {\n            return;\n        }\n\n        var data = this.data;\n        if (this._len + arguments.length > data.length) {\n            // 因为之前的数组已经转换成静态的 Float32Array\n            // 所以不够用时需要扩展一个新的动态数组\n            this._expandData();\n            data = this.data;\n        }\n        for (var i = 0; i < arguments.length; i++) {\n            data[this._len++] = arguments[i];\n        }\n\n        this._prevCmd = cmd;\n    }\n\n    _expandData() {\n        // Only if data is Float32Array\n        if (!(this.data instanceof Array)) {\n            var newData = [];\n            for (var i = 0; i < this._len; i++) {\n                newData[i] = this.data[i];\n            }\n            this.data = newData;\n        }\n    }\n\n    rect(x, y, w, h) {\n        this._ctx && this._ctx.rect(x, y, w, h);\n        this.addData(CMD.R, x, y, w, h);\n        return this;\n    }\n}\n","/*\n *\n */\nimport Element from \"../Element/Element\";\nimport pathProxy from \"./PathProxy\";\nclass Path extends Element {\n    constructor(opts) {\n        super(opts);\n        this.type = \"path\";\n        this.path = null;\n        this.__dirtyPath = true;\n\n        this.strokeContainThreshold = 5; //绘制 临界值\n        this.segmentIgnoreThreshold = 0; //部分 忽略 临界值\n        this.subPixelOptimize = false; //设备优化\n    }\n    dirty() {}\n\n    brush(ctx, prevEl) {\n        let path = this.path || new pathProxy(true);\n        let hasStroke = this.style.hasStroke(); //绘制需求\n        let hasFill = this.style.hasFill(); //填充需求\n\n        let fill = this.style.fill;\n        let stroke = this.style.stroke;\n\n        let hasFillGradient = hasFill && !!fill.colorStops;\n        let hasStrokeGradient = hasStroke && !!stroke.colorStops;\n\n        let hasFillPattern = hasFill && !!fill.image;\n        let hasStrokePattern = hasStroke && !!stroke.image;\n\n        this.style.bind(ctx, this, prevEl);\n        // console.log(this);\n\n        if (this.__dirty) {\n            let rect;\n            if (hasFillGradient) {\n                rect = rect || this.getBoundingRect();\n                this._fillGradient = this.style.getBoundingRect(ctx, fill, rect);\n            }\n\n            if (hasStrokeGradient) {\n                rect = rect || this.getBoundingRect();\n                this.__strokeGradient = this.style.getBoundingRect(ctx, stroke, rect);\n            }\n        }\n\n        if (hasFillGradient) {\n            ctx.fillStyle = this.__fillGradient;\n        }\n\n        if (hasStrokeGradient) {\n            ctx.strokeStyle = this.__strokeGradient;\n        }\n\n        //更新路径\n        if (this.__dirtyPath) {\n            // console.log(this);\n            path.beginPath(ctx);\n            this.buildPath(path, this.shape, false);\n            if (this.path) {\n                this.__dirtyPath = false;\n            }\n        } else {\n            ctx.beginPath();\n        }\n\n        if (hasFill) {\n            path.fill(ctx);\n        }\n\n        if (hasStroke) {\n            path.stroke(ctx);\n        }\n    }\n\n    getBoundingRect() {}\n\n    contian(x, y) {}\n\n    setShape() {}\n\n    getLineScale() {}\n}\nexport default Path;\n","import round_rect from \"./round_rect\";\nimport { merge } from \"../../../tools/data_util\";\nimport Path from \"../../Path/Path\";\n//tools -- 默认配置\nlet defaultConfig = {\n    shape: {\n        // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n        // r缩写为1         相当于 [1, 1, 1, 1]\n        // r缩写为[1]       相当于 [1, 1, 1, 1]\n        // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n        // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n        r: 0,\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n    }\n};\n\nexport default class Rect extends Path {\n    constructor(opts) {\n        super(merge(defaultConfig, opts, true));\n        this.type = \"rect\";\n    }\n\n    /**\n     * @method buildPath\n     * 绘制元素路径\n     * @param {Object} ctx\n     * @param {String} shape\n     */\n    buildPath(ctx, shape) {\n        let x;\n        let y;\n        let width;\n        let height;\n        if (this.subPixelOptimize) {\n        } else {\n            x = shape.x;\n            y = shape.y;\n            width = shape.width;\n            height = shape.height;\n        }\n        // 判断是否为 圆角矩形\n        if (!shape.r) {\n            ctx.rect(x, y, width, height);\n        } else {\n            round_rect(ctx, shape);\n        }\n        ctx.closePath();\n        return;\n    }\n}\n"],"names":["env"],"mappings":"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"}